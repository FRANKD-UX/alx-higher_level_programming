>>> from your_module import matrix_divided  # Replace 'your_module' with the actual module name

# Test Case 1: Basic functionality
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 2)
[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]

# Test Case 2: Division by a float
>>> matrix_divided([[10, 20], [30, 40]], 4.0)
[[2.5, 5.0], [7.5, 10.0]]

# Test Case 3: Each element is a float
>>> matrix_divided([[1.5, 2.5], [3.5, 4.5]], 2)
[[0.75, 1.25], [1.75, 2.25]]

# Test Case 4: Division by a negative number
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], -1)
[[-1.0, -2.0, -3.0], [-4.0, -5.0, -6.0]]

# Test Case 5: Division by zero (should raise an error)
>>> matrix_divided([[1, 2], [3, 4]], 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

# Test Case 6: Different row sizes (should raise an error)
>>> matrix_divided([[1, 2], [3]], 1)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

# Test Case 7: Invalid matrix (should raise an error)
>>> matrix_divided([[1, 2], [3, '4']], 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Test Case 8: Empty matrix (should raise an error)
>>> matrix_divided([], 1)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
